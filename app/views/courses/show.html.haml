= render 'layouts/breadcrumb'

%h1
  = @course.number_and_name
  %small= @term.display_name
- if @course_offerings && @course_offerings.any?
  %p
    - @course_offerings.filter_map.with_index do |offering, i|
      -# - next unless offering.lms_instance.url != "TEXTBOOK"
      - if i > 0
        %br/
      %strong= offering.display_name
      - if offering.is_manager? current_user
        = surround '(', (offering.instructors.any? ? '),' : ')') do
          = link_to 'edit', edit_admin_course_offering_path(offering)
        / - else
        /   = link_to 'unenroll', course_offering_unenroll_path(offering),
        /     method: :delete
      - if offering.instructors.any?
        = succeed ':' do
          = 'instructor'.pluralize(offering.instructors.size)
        = succeed (offering.graders.any? ? ',' : '') do
          != offering.instructors.map{ |i| link_to i.display_name,
            user_path(i) }.to_sentence
      / - if offering.graders.any?
      /   = succeed ':' do
      /     = 'grader'.pluralize(offering.graders.size)
      /   != offering.graders.map{ |i| link_to i.display_name,
      /     user_path(i) }.to_sentence

  - if !@is_student
    .well
      .row
        .col-xs-12
          .progress-status.text-primary
            0/0
      .row
        .col-xs-12
          .progress.progress-striped.active
            .progress-bar
              .text-primary
                0%
    - @course_offerings.each do |offering|
      - if @course_offerings.size > 1
        %h2= offering.display_name
        = link_to
      %table.table.table-striped
        %thead
          %tr
            %th Book Title
            %th Canvas Course
            %th
            %th
            %th
        - if offering.lms_instance.url != "TEXTBOOK"
          %tbody#odsa
            - @inst_book = offering.inst_books
            = render @inst_book
        - else
          %tbody#odsa
            %td= offering.display_name
            %td
            %td
              - course = Course.find_by(id:offering.course_id)
              - organization = Organization.find_by(id:course.organization_id)
              - term = Term.find_by(id:offering.term_id)
              = ENV["config_api_link"].gsub("/api/configure/","/Books/#{organization.slug}/#{course.slug}/#{term.slug}/#{offering.label}/html/index.html")
            %td
              - inst_book = InstBook.find_by(course_offering_id:offering.id)
              - form_name = 'compile_book_' + inst_book.id.to_s
              = form_tag '/inst_books/'+ inst_book.id.to_s , data: {type: "script"}, format: 'js', remote: true, onsubmit: "#{form_name}.disabled = true; #{form_name}.value = 'Please wait...'; Window.ODSA = Window.ODSA || {}; Window.ODSA.inst_book_id = #{inst_book.id}; Window.ODSA.action_type = 'compile_book'; return true;" do
                = submit_tag "Compile Textbook", name: form_name, class: "btn btn-primary", title: 'Compile book confirmation.', data: {confirm: "The book compilation process will regenerate the book pages on the OpenDSA server. Assignments due dates and points in Canvas course won't be affected by this action. Do you want to continue?"}
                .col-xs-1
                  %i.fa.fa-info-circle.action{ data: { toggle: 'modal', target: '#generate-course-modal' } }
                #generate-course-modal.modal.fade{role: 'dialog', tabindex: '-1' }
                  .modal-dialog.modal-md{ style: 'overflow-y: scroll; max-height:85% margin-top: 50px; margin-bottom:50px;' }
                    .modal-content
                      .modal-header
                        %p.lead Compile Textbook
                      .modal-body
                        %p
                          When you click this button the OpenDSA book will be generated as an independent resource.
                          This book will have no LMS ties such as Canvas integration.

-else

  %h2 Offerings

  %table.table.table-striped{ style: 'width: auto' }
    %thead
      %tr
        %th Term
        %th Section
        %th OpenDSA Book
        %th Instructors
        / %th Graders
        / %th Enroll
    %tbody
      - @course.course_offerings.each do |o|
        %tr
          %td= o.term.display_name
          %td= o.display_name
          - if o.odsa_books.many?
            %td
              %table.table.table-striped
                - o.odsa_books.each do |bk|
                  %tr
                    %td= bk.title
          - else
            %td!= o.odsa_books.map{ |i| i.title }.to_sentence

          %td!= o.instructors.map{ |i| link_to i.display_name,
            user_path(i) }.to_sentence
          / %td!= o.graders.map{ |i| link_to i.display_name,
          /   user_path(i) }.to_sentence
          / %td
          /   = render partial: 'course_offerings/self_enrollment',
          /     locals: { o: o }
